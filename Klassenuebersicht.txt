# MqlRealMonitor - Klassenübersicht
# Generated: 2025-08-27
# Version: 1.2.1
#
# PROJECT DESCRIPTION:
# MqlRealMonitor ist eine Java-Desktop-Anwendung für das Monitoring von MQL5 Signal-Providern.
# Die Anwendung lädt automatisch Signalprovider-Daten von der MQL5-Website herunter, parst
# Kontostand und Floating Profit, und speichert diese als Tick-Daten für Chart-Analyse.
#
# HAUPTFUNKTIONEN:
# - Automatisches Monitoring mehrerer MQL5-Signalprovider (konfigurierbare Intervalle)
# - HTML-Parsing von MQL5-Signalprovider-Seiten (Kontostand, Floating Profit, Drawdown)
# - Tick-Daten-Speicherung in CSV-Format für historische Analyse
# - Dual-Chart-System: Equity Drawdown Chart (%) + Profit Development Chart
# - Provider-Tabelle mit Live-Updates und Chart-Übersicht für alle Provider
# - NEU: Wochen- und Monatsgewinn-Berechnung basierend auf historischen Tick-Daten
# - NEU: Asynchrone Chart-Fenster-Erstellung - behebt 60-Sekunden UI-Blocking
# - NEU: Currency-Loading für XAUUSD/BTCUSD von MQL5 (v1.2.1)
# - Direkter Browser-Link zu MQL5-Signalprovider-Seiten
# - Wiederverwendbare Chart-Komponenten und modulare GUI-Architektur
#
# TECHNOLOGY STACK:
# - Java 11+ mit SWT (Standard Widget Toolkit) für GUI
# - JFreeChart für Chart-Generierung und -Rendering
# - Regex-basiertes HTML-Parsing für MQL5-Website-Daten
# - CSV-basierte Tick-Daten-Persistierung
# - Multi-threaded Design für UI-Responsiveness
#
# ARCHITECTURE HIGHLIGHTS:
# - Modular aufgebaut mit klarer Package-Struktur
# - Refactored GUI: TickChartWindow von >1000 auf <100 Zeilen reduziert
# - Wiederverwendbare Chart-Panels für verschiedene Fenster
# - NEU: Automatische Profit-Berechnungen für Wochen- und Monatsgewinne
# - NEU: Asynchrone Chart-Architektur verhindert UI-Thread-Blocking
# - NEU: Currency-Funktionalität für Währungskurse (XAUUSD, BTCUSD)
# - Robuste Fehlerbehandlung und umfassende Diagnostik
# - Thread-sichere GUI-Updates und automatische Refresh-Zyklen
# 
# Format: <Package>.<Class> | <Description>
# ========================================================================

## Main Package
com.mql.realmonitor.MqlRealMonitor | Hauptklasse für MQL5 Signal-Monitoring. Orchestriert Download, Parsing und GUI-Updates für alle Signalprovider.

## Configuration
com.mql.realmonitor.config.MqlRealMonitorConfig | Konfigurationsverwaltung für alle konfigurierbaren Parameter, Pfade und Einstellungen. Verwaltet Intervalle in Minuten.
com.mql.realmonitor.config.IdTranslationManager | translation tabelle id zu Signalprovidername

## Currency Package (NEU in Version 1.2.1)
com.mql.realmonitor.currency.CurrencyData | Model-Klasse für Währungskursdaten (Symbol, Kurs, Zeitstempel). Unterstützt CSV-Serialisierung für XAUUSD/BTCUSD.
com.mql.realmonitor.currency.CurrencyDataLoader | Hauptklasse für das Laden von Währungskursen von MQL5. Orchestriert Download, Parse und Save-Prozess für Currency-Daten.
com.mql.realmonitor.currency.CurrencyDataWriter | Writer für Kursdaten in CSV-Dateien im tick_kurse Verzeichnis. Verwaltet Dateierstellung und Append-Operations.
com.mql.realmonitor.currency.CurrencyParser | Parser für XAUUSD/BTCUSD Kurse aus MQL5 HTML-Content. Verwendet Regex-Patterns für flexibles HTML-Parsing.

## Data Layer
com.mql.realmonitor.data.TickDataLoader | Lädt und parst Tick-Daten aus CSV-Dateien. Bietet TickData und TickDataSet Klassen für Datencontainer.

## Download Layer
com.mql.realmonitor.downloader.FavoritesReader | Liest und verwaltet die favorites.txt Datei mit Signal-IDs. Unterstützt Caching und Validierung.
com.mql.realmonitor.downloader.WebDownloader | HTTP-Downloader für MQL5 Signalprovider-Seiten und Currency-URLs. Verwaltet Downloads und lokale HTML-Datei-Speicherung.

## Exception Handling
com.mql.realmonitor.exception.MqlMonitorException | Spezifische Exception-Klasse für alle MQL-Fehler. Bietet kategorisierte Fehlertypen und benutzerfreundliche Nachrichten.

## GUI Layer - Core
com.mql.realmonitor.gui.MqlRealMonitorGUI | Haupt-GUI-Klasse mit Provider-Tabelle und Toolbar. ERWEITERT: Currency-Button für XAUUSD/BTCUSD Loading (v1.2.1).
com.mql.realmonitor.gui.SignalProviderTable | Refactored Provider-Tabelle mit modularer Architektur. ERWEITERT: WeeklyProfit und MonthlyProfit Spalten für Gewinn-Berechnungen.
com.mql.realmonitor.gui.ProviderTableHelper | Hilfsfunktionen für SignalProviderTable. ERWEITERT: Support für Profit-Spalten mit Farbkodierung und numerischer Sortierung.
com.mql.realmonitor.gui.SignalProviderContextMenu | Kontextmenü für Provider-Tabelle. ASYNCHRON: Doppelklick-Handler verhindert UI-Blocking. MQL5-Website-Link für Browser-Öffnung.
com.mql.realmonitor.gui.StatusUpdater | Verwaltet periodische Status-Updates und Thread-sichere GUI-Aktualisierungen. Memory-Monitoring und Laufzeit-Informationen.

## GUI Layer - Chart System
com.mql.realmonitor.gui.ChartImageRenderer | Rendert JFreeCharts zu SWT-Images für beide Charts (Drawdown + Profit). Verwaltet Chart-zu-Image Konvertierung.
com.mql.realmonitor.gui.TickChartManager | Verwaltet beide Charts (Drawdown + Profit) kombiniert. Korrigierte X-Achsen-Probleme und Domain-Achsen-Kalibrierung.
com.mql.realmonitor.gui.ProfitChartManager | Verwaltet Profit-Chart mit Kontostand (grün) und Gesamtwert (gelb). Korrigierte X-Achsen-Kalibrierung.

## GUI Layer - Chart Panels (Reusable Components)
com.mql.realmonitor.gui.EquityDrawdownChartPanel | Wiederverwendbare SWT-Komponente für Drawdown-Chart-Anzeige. Kapselt Canvas, Painting und Event-Handling.
com.mql.realmonitor.gui.ProfitDevelopmentChartPanel | Wiederverwendbare SWT-Komponente für Profit-Chart-Anzeige. Kapselt komplette Profit-Chart-Funktionalität.
com.mql.realmonitor.gui.SignalOverviewPanel | Panel für einzelnen Signalprovider in der Übersicht. Zeigt Provider-Info, Drawdown- und Profit-Chart in 3 Spalten.

## GUI Layer - Windows (Refactored + Async)
com.mql.realmonitor.gui.TickChartWindow | Stark vereinfachte Facade-Klasse (von >1000 auf <100 Zeilen). Delegiert alle Funktionalität an TickChartWindowManager.
com.mql.realmonitor.gui.TickChartWindowManager | Hauptmanager für TickChartWindow. OPTIMIERT: Asynchrones Setup und stufenweise UI-Erstellung für bessere Responsiveness.
com.mql.realmonitor.gui.AsyncTickChartWindow | NEU: Asynchrone Chart-Fenster-Klasse - BEHEBT 60-SEKUNDEN UI-BLOCKING. Zeigt sofort Loading-Fenster, erstellt Charts im Background.
com.mql.realmonitor.gui.TickChartWindowToolbar | Separate Toolbar-Klasse mit allen Buttons. Diagnostik, Tickdaten, MQL5-Website, Zoom-Funktionen und Event-Handler.
com.mql.realmonitor.gui.SignalProviderOverviewWindow | Chart-Übersichtsfenster für alle Signalprovider. Scrollbare Tabelle mit Charts für jeden Provider (M15, 50% Größe).
com.mql.realmonitor.gui.TickDataDisplayWindow | Separates scrollbares Fenster für rohe Tickdaten-Anzeige. Zeigt CSV-formatierte Tick-Historie in Textfeld.

## GUI Layer - Utilities
com.mql.realmonitor.gui.TickDataFilter | Filtert Tick-Daten nach Zeitintervallen. Verbesserte robuste Filterung mit umfassender Diagnostik für alle Signalprovider.
com.mql.realmonitor.gui.TimeScale | Enum für Zeitintervalle (M1, M5, M15, H1, H4, D1). Definiert Intervall- und Anzeige-Minuten für Chart-Skalierung.

## Parser Layer
com.mql.realmonitor.parser.HTMLParser | HTML-Parser für MQL5-Seiten. Extrahiert Kontostand, Floating Profit und Provider-Name mit flexiblem Pattern-Matching.
com.mql.realmonitor.parser.SignalData | Model-Klasse für Signalprovider-Daten. Verbesserte Equity Drawdown Berechnung mit robuster Diagnostik und Validierung.

## Tick Data Layer
com.mql.realmonitor.tickdata.TickDataWriter | Writer für Tick-Daten mit robustem Lesen. Verwaltet CSV-Datei-Schreibung und bietet umfassende Lese-Diagnostik für Charts.

## Utilities
com.mql.realmonitor.utils.MqlUtils | Utility-Klasse mit allgemeinen Hilfsfunktionen. Logging-Setup, Validierung, Formatierung und File-Handling-Utilities.
com.mql.realmonitor.utils.PeriodProfitCalculator | Berechnet Wochen- und Monatsgewinne basierend auf Tick-Daten. Analysiert Equity-Veränderungen seit Wochenstart/Monatsstart.

# ========================================================================
# ARCHITECTURE SUMMARY
# ========================================================================

## Key Architectural Improvements (Version 1.2.1):
- Refactored TickChartWindow: Split into 4 modular classes (Window, Manager, Toolbar, Panels)
- Reusable Chart Panels: EquityDrawdownChartPanel and ProfitDevelopmentChartPanel can be used in multiple windows
- Dual Chart System: Both Drawdown and Profit charts managed by unified TickChartManager
- Chart Overview: New SignalProviderOverviewWindow for viewing all providers at once
- MQL5 Website Integration: Direct browser links to signal provider pages
- NEU: Profit Analysis: Automatic calculation of weekly and monthly profit percentages
- NEU: ASYNC ARCHITECTURE: AsyncTickChartWindow verhindert 60-Sekunden UI-Blocking komplett
- NEU: CURRENCY FUNCTIONALITY: Complete currency data loading system for XAUUSD/BTCUSD from MQL5
- Robust Data Handling: Improved error handling and diagnostics throughout

## Package Structure:
- Main: Core application entry point
- Config: Configuration management
- Currency: Currency data loading and processing (NEU in v1.2.1)
- Data: Tick data loading and processing
- Downloader: Web downloading and favorites management
- Exception: Centralized error handling
- GUI: User interface (core, charts, windows, utilities)
- Parser: HTML parsing and data models
- TickData: CSV file writing and reading
- Utils: General utility functions (including profit calculations)

## Recent Enhancements (Version 1.2.1):
- NEU: Currency Package - Komplette Währungskurs-Funktionalität für XAUUSD/BTCUSD
- NEU: "Kurse laden" Button in Haupt-GUI für Currency-Loading von MQL5
- NEU: Thread-sichere Currency-Datenverarbeitung mit detaillierter Diagnostik
- NEU: CSV-basierte Currency-Datenspeicherung in realtick/tick_kurse/
- ERWEITERT: WebDownloader um downloadFromWebUrl() für allgemeine URL-Downloads
- ERWEITERT: MqlRealMonitorGUI um Currency-Button und Exception-Handling
- KORRIGIERT: Vollständige Exception-Behandlung für Currency-Initialisierung

## Currency Architecture (NEU in Version 1.2.1):
```
User-Klick "Kurse laden" → CurrencyDataLoader.loadCurrencyRatesWithDiagnosis()
                         ↓
WebDownloader.downloadFromWebUrl(MQL5_URL) → HTML-Download
                         ↓
CurrencyParser.parseRates(htmlContent) → XAUUSD/BTCUSD Extraktion
                         ↓
CurrencyDataWriter.writeCurrencyData() → CSV-Speicherung in tick_kurse/
                         ↓
Erfolg/Fehler-Dialog → Thread-sichere GUI-Updates
```

## Threading-Model (ERWEITERT):
- UI-Thread: Haupt-GUI, Loading-Fenster, User-Interaktion, Currency-Button-Handling
- Background-Threads: Chart-Erstellung, Daten-Loading, Web-Downloads, Currency-Loading
- Sync-Points: Nur für kritische UI-Updates (Display.asyncExec/syncExec)
- No-Blocking: Keine langandauernden Operationen im UI-Thread

## Column Structure (Provider Table - 15 Spalten):
0. Signal ID
1. Favoritenklasse  
2. Provider Name
3. Status
4. Kontostand
5. Floating Profit
6. Equity Drawdown
7. Gesamtwert
8. WeeklyProfit (Currency)
9. MonthlyProfit (Currency)
10. WeeklyProfit (Percent)
11. MonthlyProfit (Percent) 
12. Währung
13. Letzte Aktualisierung
14. Änderung

## Performance Improvements:
- UI-Blocking: Von 60 Sekunden auf 0ms reduziert
- Chart-Loading: Stufenweise und asynchron
- Currency-Loading: Thread-sichere Background-Verarbeitung
- Memory: Optimierte Image-Verwaltung
- Threading: Klare Trennung UI vs. Background-Operationen
- User Experience: Sofortiges Feedback, abbruchbare Operationen

## File Structure Enhancements (Version 1.2.1):
- realtick/tick_kurse/ - Neues Verzeichnis für Currency-CSV-Dateien
- realtick/download_mql5/ - Download-Cache für MQL5 Currency-HTML-Seiten
- xauusd.txt, btcusd.txt - CSV-Dateien mit Zeitstempel, Symbol, Kurs

## Total Classes: 31 (war 27 - +4 Currency Classes)
## LOC Reduction: TickChartWindow reduced from >1000 to <100 lines through refactoring
## Reusability: Chart panels can now be reused across different windows
## NEW: Automated profit calculations for performance tracking
## NEW: Complete async architecture eliminates UI blocking
## NEW: Background chart creation with user-friendly loading experience
## NEW: Currency data loading system for XAUUSD/BTCUSD from MQL5